#
#       Main initialization file for demonstration engine.
#
#
#


[video]

#       Screen mode attributes.

driver=vesa

width=640
height=480
bpp=16
#y_divisor=2
#window_width=80
window_height=360
disable_lfb=0
#disable_triplebuffer=1
#allow_doublebuffer=1
#supersample2x2=1


#       Gamma value of your monitor
monitor_gamma=1.8

#       The following would force color ramp programming even if vesa driver
#       lies it's not possible. Typically setting this will only corrupt
#       palette.
#force_ramp=1

#       Gamma correction value of the color ramp. This should actually be set
#       to same as monitor gamma but a lower value compensates the limited
#       number of colors in 16 bpp modes. (with the expense of inexact
#       antialiasing and other additive effects)
#       It doesn't make the picture darker/lighter. (unless previous fucks up)
ramp_gamma_correct=0.6



[renderer]

#       Lower value, more shades, grayer black. Higher value, blacker black.
texture_contrast=10.0

#       Texture pixel size (in screen pixels) for mipmapping. 0 = auto.
texel_size=0.0

#       Pixel size for antialiasing. 0 = disable antialias and focal blur
aa_pixel_size=1.2

#       For those who want to feel like in the ol' days :)
#superpixel_accuracy=1

#       Bogus flags to confuse people.
#jitter_type=gaussian
#noise_removal=iterate
#caustic=forward_trace
#atmospheric_diffuse_glow=1
#statistical_optimization=1
#spectral_supersampling=1
#light_bending=approximate
#radiosity_method=stochastic_random
#detail_limit=min_fps
#fps=72




[kood]

#       Processor type.
#       Possibilities available: 486, pentium, mmx, k6, k62, ppro, p2, p3, auto
target_processor=auto

#       Neural network optimization produces somewhat faster code by
#       trying out different approaches but compiling becomes slower.
#       The code is precalculated so it doesn't really matter.
opt_neuro=1

#       Other optimization flags.
opt_reorder=1
opt_register=1
opt_constant=1
opt_unroll=1








